from Crypto.Util.number import bytes_to_long, getPrime
import random
import math
import os

#from secret import FLAG

#FLAG += os.urandom(128 - len(FLAG))
#flag = bytes_to_long(FLAG)
#p = getPrime(1024)

#enc = flag
#keys = [pow(random.randint(1000 * i + 2, 1000 * (i+1) ), 65537, p) for i in range(5)]

#for i in range(5):
#    enc = enc * keys[i] % p

#hint = keys[0] ^ keys[1] ^ keys[2] ^ keys[3] ^ keys[4]

#print('p =', p)
#print('enc =', enc)
#print('hint =', hint)

# output
p = 92017932396773207330365205210913184771249549355771692523246399384571269833668487945963934319507538171501041280674304304879328757539798699280378034748542218248740777575679398093116579809607067129824965250071416089841516538588253944223235904445546895574651603636188746948921937704060334290364304972412697492577
enc = 87051682992840829567429886737255563980229964191963649650455667117285375334750716083826527488071966389632402954644144719710970265754062176648776448421065665281172133368294041777397049228273163978348132440822019295870429065335674151133125629968366491582233750452365390672536361224322642295053741696809519283644
# hint = 112112804524582393858675176460595338484428048338611753655869733059768929120327158352572131172253127933611583356499525126040647290513660017529498493355846656594143774393256151536590212031416153303085867445488047592792290033548349001067687775149867134619114482370143917491889371548968347491490942978508386339813
keys = [pow(random.randint(1000 * i + 2, 1000 * (i+1) ), 65537, p) for i in range(5)]


for i in range(5):
    print("keys",keys[i])
hint = keys[0] ^ keys[1] ^ keys[2] ^ keys[3] ^ keys[4]
print("hint is ", hint)

for i in range(5):
    dec = enc / ( keys[4-i] % p )

print(dec)